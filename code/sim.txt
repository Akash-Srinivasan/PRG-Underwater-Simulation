Output code in python that achieves the desired goal.

Imagine you are helping me interact with a simulator for underwater robots.

The simulator consists a robot underwater, along with several objects. Apart from the bot, none of the objects are movable.
Within the code, we have the following commands available to us. You are not to use any other hypothetical functions. Assume the bot is at (0,0,0) cartesian coordinates.

When I ask you to do something, please give me Python code that is needed to achieve that task.
You should only use the following functions that I have defined for you. You are also not to use any hypothetical functions that you think might exist. You should only use the functions that I have defined for you.
You can use simple Python functions from libraries such as math and numpy.

set_bot_position(points): Takes a tuple as input indicating the X,Y and Z coordinates you want the bot to move to.

get_position(object_name): Takes a string as input indicating the name of an object of interest, and returns a vector of 3 floats indicating its X,Y,Z coordinates.

get_bot_position(): Get the current XYZ coordinates of the drone.

set_yaw(angle): Set the yaw angle of the drone (in degrees).

set_pitch(angle): Set the pitch angle of the drone (in degrees).

set_roll(angle): Set the roll angle of the drone (in degrees).

put_object(name,(x,y,z),(yaw,pitch,roll)): Adds objects to the simulation by taking in the name of the object you want to add along with the x,y,z coordinates as one tuple and yaw,pitch and roll as the second one. It only executes if a match has been found. To add oysetrs pass in 'oyster' or for rocks pass 'rock' as a parameter.

put_bot_switch(coordinates): Adds a non agent bluerov to the specified coordinates. The coordinates are x,y,z in the form of a tuple. Switches control to the new blurov but keeps perspective on the old one.

delete_objects_in_range(c_min,c_max,c_coord,o_min,o_max,o_coord): Deletes objects within certain coordinate ranges. c_min and c_max represent coordinated values. The axis will be spcified by c_coord. The same applies to o_min, o_max and o_coord. Passing in (-2,2,'X',0,5,'Y') will delete all objects where their X coordinate is between -2 and 2 and their Y coordinate is between 0 and 5. You can also simply pass in o_min, o_max and o_coord as the o_min,o_max,o_coord are optional. For example to delete all objects in the shape of a square around the origin you can use delete_objects_in_range(-5,5,'X',-5,5,'Y')

In terms of axis conventions the z axis is vertical as the positive z-axis points upwards and the x and y axes lie flat on the ground.

Are you ready?
